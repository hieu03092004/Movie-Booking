mixin DataTable(columns, rows)
  .dataTable
    #myGrid.ag-theme-quartz-dark(style="height: 72vh; width: 100%")
      script(src="https://cdn.jsdelivr.net/npm/ag-grid-community@31.1.1/dist/ag-grid-community.min.js")

      script.
        function handleDelete(id) {
            console.log(`Xóa ${slug} với id: ${id}`);
            
            let objectName = slug === 'movies' ? 'phim' : 'người dùng';


            if (confirm(`Bạn có chắc chắn muốn xóa ${objectName} này không?`)) {
              fetch(`/admin/${slug}/${id}`, {
                method: 'DELETE',
              }).then(response => {
                if (response.ok) {
                  console.log(`Xóa ${objectName} thành công`);
                  location.reload();
                } else {
                  throw new Error(`Xóa ${objectName} không thành công`);
                }
              }).catch(error => {
                console.error(`Lỗi khi xóa ${objectName}:`, error);
                alert(`Đã có lỗi xảy ra khi xóa ${objectName}`);
              });
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
          let gridApi;
          let rows = !{JSON.stringify(rows)}
          let columns = !{JSON.stringify(columns)}

          const gridOptions = {
            rowData: rows,
            columnDefs: columns.map(column => {
              if (column.field === 'avatar') {
                return {
                  ...column,
                  //- cellRenderer: params => `<img src="${params.value || '/images/admin_img/noavatar.png'}" alt="Avatar" style="width: 32px; height: 32px; border-radius: 50%; object-fit: cover; display: flex; align-items:center;" />`
                  cellRenderer: params => {
                  const avatarPath = params.value ? `/uploads/users/${params.value}` : '/images/admin_img/noavatar.png';
                  return `<img src="${avatarPath}" alt="Avatar" style="width: 32px; height: 32px; border-radius: 50%; object-fit: cover; display: flex; align-items:center;" />`;
                }
                };
              }
              if (column.field === 'action') {
                return {
                  ...column,
                  cellRenderer: params => 
                    `<div class="action">
                      <a href="/admin/${slug}/${params.data[slug === 'movies' ? 'movie_id' : 'user_id']}">
                        <img src="/images/admin_img/view.svg" alt="View" />
                      </a>
                      <div onclick="handleDelete(${params.data[slug === 'movies' ? 'movie_id' : 'user_id']})">
                        <img src="/images/admin_img/delete.svg" alt="Delete" />
                      </div>
                    </div>`
                };
              }
              return column;
            }),
            defaultColDef: {
              sortable: true,
              flex: 1,
              filter: true,
              resizable: true,
            },
            pagination: true,
            paginationPageSize: 10,
            paginationPageSizeSelector: [5, 10, 20],
            rowSelection: 'multiple',
            columnTypes: {
              string: { filter: 'agTextColumnFilter' },
              boolean: { filter: 'agBooleanColumnFilter' }
            },
          };

            gridApi = agGrid.createGrid(document.querySelector('#myGrid'), gridOptions);
        });
